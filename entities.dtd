<!ENTITY RepairMailSell '
	<CustomBehavior File="Message" Text="Bag slots are low, we need to free up some space!" LogColor="Lime" />
	<If Condition="Me.IsAlliance" >
		&AllyRepairMailSellLocation;
	<ElseIf Condition="Me.IsHorde">
		&HordeRepairMailSellLocation;
	</ElseIf>
	</If>'
>
<!ENTITY RepairSell '
	<CustomBehavior File="Message" Text="Durability is low, we need to repair!" LogColor="Lime" />
	&NeutralRepairSellLocation;'
>
<!ENTITY ForceSetVendor '
	<If Condition="Me.LowestDurabilityPercent &lt;= &durability;">
		<CustomBehavior File="Message" Text="Repairing" LogColor="Lime" />
		<CustomBehavior File="ForceSetVendor" DoRepair="true" />
		<CustomBehavior File="WaitTimer" WaitTime="30000" TerminateWhen="Me.LowestDurabilityPercent &gt; &durability;" />
	</If>
	<If Condition="Me.FreeBagSlots &lt;= &bagslots;" >
		<CustomBehavior File="Message" Text="Mailing/Selling Items" LogColor="Lime" />
		<CustomBehavior File="ForceSetVendor" DoMail="true" DoSell="true" />
		<CustomBehavior File="WaitTimer" WaitTime="30000" TerminateWhen="Me.FreeBagSlots &gt; &bagslots;" />
	</If>'
>
<!ENTITY CheckRepairMailSell '
	<!-- Handle Mail and Repairs -->
	<While Condition="(Me.FreeBagSlots &lt;= &bagslots;) || (Me.LowestDurabilityPercent &lt;= &durability;)" >

	<If Condition="(Me.FreeBagSlots &lt;= &bagslots;)" >
		&RepairMailSell;
	</If>

	<If Condition="(Me.LowestDurabilityPercent &lt;= &durability;) &amp;&amp; (Me.FreeBagSlots &gt; &bagslots;)" >
		&RepairSell;
	</If>

	&ForceSetVendor;

	</While>'
>
<!ENTITY DestinationMapId "962" >
<!ENTITY DestinationZoneId "6723" >
<!ENTITY UseGarrisonHearth '
	<CustomBehavior File="RunCode" Code="Logging.Write(System.Windows.Media.Colors.Yellow, &quot;[Notification]: Using our Garrison Hearthstone.&quot;);" />
	<CustomBehavior File="ForcedDismount" />
	<While Condition="Me.MapId != &DestinationMapId;" >
		<!-- Use Garrison Hearth -->
		<CustomBehavior File="Misc\RunLua" Lua="UseItemByName(110560);" WaitTime="500" />
		<CustomBehavior File="WaitTimer" WaitTime="50000" TerminateWhen="Me.MapId == &DestinationMapId; || Me.Combat || !Me.IsCasting" />
	</While>'
>
<!ENTITY GarrisonHearthCdMins '
	Me.BagItems.FirstOrDefault(h => h.Entry == 110560).CooldownTimeLeft.TotalMinutes
'
>
<!ENTITY GarrisonHearthCdMs '
	Me.BagItems.FirstOrDefault(h => h.Entry == 110560).CooldownTimeLeft.TotalMilliseconds
'
>
<!ENTITY GarrisonHearthCdSecs '
	Me.BagItems.FirstOrDefault(h => h.Entry == 110560).CooldownTimeLeft.TotalSeconds
'
>
<!ENTITY LogGarrisonHearthCd '
	<CustomBehavior File="RunCode" Code="Logging.Write(System.Windows.Media.Colors.Yellow, &quot;[Notification]: Garrison Hearthstone on cooldown - Time remaining &quot; + &GarrisonHearthCdMins; + &quot; minute(s) &quot; + &GarrisonHearthCdSecs; + &quot; second(s) &quot;);" />
'
>